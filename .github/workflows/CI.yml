name: Continuous integration

on:
  push:
    branches: [develop, master]
  pull_request:

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.6, 3.7, 3.8]
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install and print system dependencies (Linux)
        if: runner.os == 'Linux'
        run: |
          sudo ln -fs /usr/bin/gfortran-9 /usr/local/bin/gfortran
          gfortran --version
      - name: Install and print system dependencies (macOS)
        shell: bash
        if: runner.os == 'macOS'
        run: |
          brew cask install gfortran
          sudo ln -fs /usr/local/gfortran/bin/gfortran /usr/local/bin/gfortran
          sudo ln -fs /usr/local/gfortran/bin/gcc /usr/local/bin/gcc
          sudo ln -fs /usr/local/gfortran/bin/g++ /usr/local/bin/g++
          gfortran --version
      - name: Install and print system dependencies (Windows)
        if: runner.os == 'Windows'
        run: |
          gfortran --version
      - name: Install xmipy
        run: |
          pip install -e .
      - name: Install test dependencies
        run: |
          pip install requests
          pip install https://github.com/modflowpy/pymake/zipball/master
          pip install https://github.com/modflowpy/flopy/zipball/develop
          pip install pytest
          pip install pytest-cov
      - name: Test with pytest
        # The flag -s stops pytest from capturing output
        # This is necessary until proper error reporting is implemented by Modflow
        run: |
          pytest -vs --cov=xmipy --cov-report=xml tests/
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.8
        uses: actions/setup-python@v1
        with:
          python-version: 3.8
      - name: Install packages
        run: |
          pip install black
          pip install flake8
      - name: Run black
        run: black --check .
      - name: Run flake8
        run: flake8
